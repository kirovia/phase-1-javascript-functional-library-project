{
  "stats": {
    "suites": 3,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 1,
    "start": "2024-12-22T23:59:13.266Z",
    "end": "2024-12-22T23:59:13.557Z",
    "duration": 291
  },
  "tests": [
    {
      "title": "calls alert with each element passed",
      "fullTitle": "index.js myEach calls alert with each element passed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "calls alert properly on object values",
      "fullTitle": "index.js myEach calls alert properly on object values",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the original collection",
      "fullTitle": "index.js myEach returns the original collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "successfully returns a correctly populated array",
      "fullTitle": "index.js myMap successfully returns a correctly populated array",
      "duration": 0,
      "currentRetry": 0,
      "err": {
        "stack": "TypeError: Cannot read properties of undefined (reading 'length')\n    at arraysEqual (test/indexTest.js:264:28)\n    at Context.<anonymous> (test/indexTest.js:46:14)\n    at process.processImmediate (node:internal/timers:483:21)",
        "message": "Cannot read properties of undefined (reading 'length')"
      }
    }
  ],
  "passes": [
    {
      "title": "calls alert with each element passed",
      "fullTitle": "index.js myEach calls alert with each element passed",
      "duration": 1,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "calls alert properly on object values",
      "fullTitle": "index.js myEach calls alert properly on object values",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "returns the original collection",
      "fullTitle": "index.js myEach returns the original collection",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    }
  ]
}